// ==============================
// 変数
// ==============================
$font-color_default: #777;
$font-color_header: #cecece;
$color_corp: #000000;
$bgColor: #f8f7fc;
$back-ground-color: #f5f5f5;
$nav-back-ground-color: rgba(255, 255, 255, 0.82);
$form-color: #ffff;
$btn-color: #0096a76e;
$font-family_corp: "Special Elite", cursive;
$font-family_title: "Luckiest Guy", cursive;
$font-family_modal: "M PLUS 1p", sans-serif;
$font-family_total: Quicksand, 游ゴシック体, "Yu Gothic", YuGothic, "ヒラギノ角ゴシック Pro", "Hiragino Kaku Gothic Pro",
    メイリオ, Meiryo, Osaka, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;

// メディアクエリのブレークポイント設定
//@media screen and (max-width: 414px){
//  .btn{
//    font-size: .7em;
//  }
//}
// 通常、変数として設定しておくと後々変更しやすくて便利
//  !defaultはすでに変数に値が入っていた場合は何もせず、変数に値が入っていない時に割り当てられるもの
// https://hail2u.net/blog/webdesign/how-to-use-bang-default-flag-in-sass-and-how-it-works.html
//$breakpoint-sm: 400px !default;
//$breakpoint-md: 768px !default;
//$breakpoint-lg: 1000px !default;
// マップ型変数を使うと便利
$breakpoints: (
    "sm": "screen and (max-width: 414px)",
    "md": "screen and (max-width: 768px)",
    "lg": "screen and (max-width: 1000px)",
    "xl": "screen and (max-width: 1200px)",
) !default;
// ==============================
// mixin
// ==============================
// @mixinは関数のようなものを作れる
// https://www.webcreatorbox.com/tech/sass-mixin
// map-get()の第一引数に変数名、第二引数にマップ型のキーを渡すと、マップ型の値が返る
// #{}は「インターポーレーション」といって、演算できない箇所、変数使えない箇所でも使えるようにするものcalcなどでよく使う
// http://book.scss.jp/code/c4/08.html
@mixin mq($breakpoint: sm) {
    @media #{map-get($breakpoints, $breakpoint)} {
        @content;
    }
}

@mixin md($breakpoint: md) {
    @media #{map-get($breakpoints, $breakpoint)} {
        @content;
    }
}

@mixin lg($breakpoint: lg) {
    @media #{map-get($breakpoints, $breakpoint)} {
        @content;
    }
}

// ==================================
// base
// ==================================
html,
body {
    overflow-x: hidden;
    width: 100%;
    color: $font-color_default;
    font-size: 16px;
    line-height: 1.6;
    font-family: $font-family_total; // TODO:リファクタ必要（変数にする）ok!
    text-size-adjust: 100%;
    letter-spacing: 0.1em;
    background-color: $back-ground-color;
}
p,
a {
    -webkit-font-smoothing: antialiased;
}

a {
    color: $font-color_default;
    text-decoration: none;
    transition: 0.3s;
}

a:hover {
    color: $font-color_default;
    transition: 0.3s;
}

img {
    width: 100%;
    vertical-align: bottom;
}
